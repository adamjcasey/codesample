/*------------------------------------------------------------------------------
 Copyright Â© 2017 Continuum

All rights reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are met:

  a. Redistributions of source code must retain the above copyright notice,
     this list of conditions and the following disclaimer.
  b. Redistributions in binary form must reproduce the above copyright
     notice, this list of conditions and the following disclaimer in the
     documentation and/or other materials provided with the distribution.
  c. Neither the name of Continuum nor the names of its contributors
     may be used to endorse or promote products derived from this software
     without specific prior written permission.


THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
ARE DISCLAIMED. IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE FOR
ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH
DAMAGE.

Created by Adam Casey 2017
------------------------------------------------------------------------------*/

#include "include/gui_color_map.h"

//-----------------------------------------------------------------------------
uint32_t GUIColorMap::raw_[NUMBER_OF_GRADIENT_STEPS] =
{
    0xFFFFFF, 0xFFFEFF, 0xFFFDFF, 0xFFFCFF, 0xFCFBFF, 0xFCFBFF, 0xFCFBFF, 0xFCFBFF, 0xF9F8FE, 0xF9F7FE, 0xF9F6FE, 0xF9F5FE, 0xF6F4FE, 0xF6F3FE, 0xF6F2FE, 0xF6F1FE,   // NOLINT(whitespace/line_length)
    0xF3F0FD, 0xF3F0FD, 0xF3F0FD, 0xF3F0FD, 0xF0EDFD, 0xF0ECFD, 0xF0EBFD, 0xF0EAFD, 0xEDE9FC, 0xEDE9FC, 0xEDE9FC, 0xEDE9FC, 0xEAE6FC, 0xEAE5FC, 0xEAE4FC, 0xEAE3FC,   // NOLINT(whitespace/line_length)
    0xE7E2FB, 0xE7E1FB, 0xE7E0FB, 0xE7DFFB, 0xE4DEFB, 0xE4DEFB, 0xE4DEFB, 0xE4DEFB, 0xE1DBFA, 0xE1DAFA, 0xE1D9FA, 0xE1D8FA, 0xDED7FA, 0xDED6FA, 0xDED5FA, 0xDED4FA,   // NOLINT(whitespace/line_length)
    0xDBD3F9, 0xDBD3F9, 0xDBD3F9, 0xDBD3F9, 0xD8D0F9, 0xD8CFF9, 0xD8CEF9, 0xD8CDF9, 0xD5CCF8, 0xD5CCF8, 0xD5CCF8, 0xD5CCF8, 0xD2C9F8, 0xD2C8F8, 0xD2C7F8, 0xD2C6F8,   // NOLINT(whitespace/line_length)
    0xCFC5F7, 0xCFC4F7, 0xCFC3F7, 0xCFC2F7, 0xCCC1F7, 0xCCC1F7, 0xCCC1F7, 0xCCC1F7, 0xC9BEF6, 0xC9BDF6, 0xC9BCF6, 0xC9BBF6, 0xC6BAF6, 0xC6B9F6, 0xC6B8F6, 0xC6B7F6,   // NOLINT(whitespace/line_length)
    0xC3B6F5, 0xC3B6F5, 0xC3B6F5, 0xC3B6F5, 0xC0B3F5, 0xC0B2F5, 0xC0B1F5, 0xC0B0F5, 0xBDAFF4, 0xBDAFF4, 0xBDAFF4, 0xBDAFF4, 0xBAACF4, 0xBAABF4, 0xBAAAF4, 0xBAA9F4,   // NOLINT(whitespace/line_length)
    0xB7A8F3, 0xB7A7F3, 0xB7A6F3, 0xB7A5F3, 0xB5A4F3, 0xB5A4F3, 0xB5A4F3, 0xB5A4F3, 0xB2A1F2, 0xB2A0F2, 0xB29FF2, 0xB29EF2, 0xAF9DF2, 0xAF9CF2, 0xAF9BF2, 0xAF9AF2,   // NOLINT(whitespace/line_length)
    0xAC99F2, 0xAC99F2, 0xAC99F2, 0xAC99F2, 0xA996F1, 0xA995F1, 0xA994F1, 0xA993F1, 0xA692F1, 0xA691F1, 0xA690F1, 0xA68FF1, 0xA38EF0, 0xA38EF0, 0xA38EF0, 0xA38EF0,   // NOLINT(whitespace/line_length)
    0xA08BF0, 0xA08AF0, 0xA089F0, 0xA088F0, 0x9D87EF, 0x9D87EF, 0x9D87EF, 0x9D87EF, 0x9A84EF, 0x9A83EF, 0x9A82EF, 0x9A81EF, 0x9780EE, 0x977FEE, 0x977EEE, 0x977DEE,   // NOLINT(whitespace/line_length)
    0x947CEE, 0x947CEE, 0x947CEE, 0x947CEE, 0x9179ED, 0x9178ED, 0x9177ED, 0x9176ED, 0x8E75ED, 0x8E74ED, 0x8E73ED, 0x8E72ED, 0x8B71EC, 0x8B71EC, 0x8B71EC, 0x8B71EC,   // NOLINT(whitespace/line_length)
    0x886EEC, 0x886DEC, 0x886CEC, 0x886BEC, 0x856AEB, 0x856AEB, 0x856AEB, 0x856AEB, 0x8267EB, 0x8266EB, 0x8265EB, 0x8264EB, 0x7F63EA, 0x7F62EA, 0x7F61EA, 0x7F60EA,   // NOLINT(whitespace/line_length)
    0x7C5FEA, 0x7C5FEA, 0x7C5FEA, 0x7C5FEA, 0x795CE9, 0x795BE9, 0x795AE9, 0x7959E9, 0x7658E9, 0x7658E9, 0x7658E9, 0x7658E9, 0x7357E8, 0x7357E8, 0x7357E8, 0x7357E8,   // NOLINT(whitespace/line_length)
    0x7057E8, 0x7057E8, 0x7057E8, 0x7057E8, 0x6D56E7, 0x6D56E7, 0x6D56E7, 0x6D56E7, 0x6A55E7, 0x6A55E7, 0x6A55E7, 0x6A55E7, 0x6955E6, 0x6955E6, 0x6955E6, 0x6955E6,   // NOLINT(whitespace/line_length)
    0x6854E6, 0x6854E6, 0x6854E6, 0x6854E6, 0x6753E5, 0x6753E5, 0x6753E5, 0x6753E5, 0x6752E5, 0x6752E5, 0x6752E5, 0x6752E5, 0x6652E5, 0x6652E5, 0x6652E5, 0x6652E5,   // NOLINT(whitespace/line_length)
    0x6551E5, 0x6551E5, 0x6551E5, 0x6551E5, 0x6450E6, 0x6450E6, 0x6450E6, 0x6450E6, 0x6350E6, 0x6350E6, 0x6350E6, 0x6350E6, 0x624FE6, 0x624FE6, 0x624FE6, 0x624FE6,   // NOLINT(whitespace/line_length)
    0x614EE6, 0x614EE6, 0x614EE6, 0x614EE6, 0x614EE7, 0x614EE7, 0x614EE7, 0x614EE7, 0x604DE7, 0x604DE7, 0x604DE7, 0x604DE7, 0x5F4CE7, 0x5F4CE7, 0x5F4CE7, 0x5F4CE7,   // NOLINT(whitespace/line_length)
    0x5E4CE7, 0x5E4CE7, 0x5E4CE7, 0x5E4CE7, 0x5D4BE7, 0x5D4BE7, 0x5D4BE7, 0x5D4BE7, 0x5C4AE8, 0x5C4AE8, 0x5C4AE8, 0x5C4AE8, 0x5B49E8, 0x5B49E8, 0x5B49E8, 0x5B49E8,   // NOLINT(whitespace/line_length)
    0x5A49E8, 0x5A49E8, 0x5A49E8, 0x5A49E8, 0x5A48E8, 0x5A48E8, 0x5A48E8, 0x5A48E8, 0x5947E8, 0x5947E8, 0x5947E8, 0x5947E8, 0x5847E9, 0x5847E9, 0x5847E9, 0x5847E9,   // NOLINT(whitespace/line_length)
    0x5746E9, 0x5746E9, 0x5746E9, 0x5746E9, 0x5645E9, 0x5645E9, 0x5645E9, 0x5645E9, 0x5545E9, 0x5545E9, 0x5545E9, 0x5545E9, 0x5444EA, 0x5444EA, 0x5444EA, 0x5444EA,   // NOLINT(whitespace/line_length)
    0x5443EA, 0x5443EA, 0x5443EA, 0x5443EA, 0x5343EA, 0x5343EA, 0x5343EA, 0x5343EA, 0x5242EA, 0x5242EA, 0x5242EA, 0x5242EA, 0x5141EA, 0x5141EA, 0x5141EA, 0x5141EA,   // NOLINT(whitespace/line_length)
    0x5040EB, 0x5040EB, 0x5040EB, 0x5040EB, 0x4F40EB, 0x4F40EB, 0x4F40EB, 0x4F40EB, 0x4E3FEB, 0x4E3FEB, 0x4E3FEB, 0x4E3FEB, 0x4E3EEB, 0x4E3EEB, 0x4E3EEB, 0x4E3EEB,   // NOLINT(whitespace/line_length)
    0x4D3EEC, 0x4D3EEC, 0x4D3EEC, 0x4D3EEC, 0x4C3DEC, 0x4C3DEC, 0x4C3DEC, 0x4C3DEC, 0x4B3CEC, 0x4B3CEC, 0x4B3CEC, 0x4B3CEC, 0x4A3CEC, 0x4A3CEC, 0x4A3CEC, 0x4A3CEC,   // NOLINT(whitespace/line_length)
    0x493BEC, 0x493BEC, 0x493BEC, 0x493BEC, 0x483AED, 0x483AED, 0x483AED, 0x483AED, 0x483AED, 0x483AED, 0x483AED, 0x483AED, 0x4739ED, 0x4739ED, 0x4739ED, 0x4739ED,   // NOLINT(whitespace/line_length)
    0x4638ED, 0x4638ED, 0x4638ED, 0x4638ED, 0x4537EE, 0x4537EE, 0x4537EE, 0x4537EE, 0x4437EE, 0x4437EE, 0x4437EE, 0x4437EE, 0x4336EE, 0x4336EE, 0x4336EE, 0x4336EE,   // NOLINT(whitespace/line_length)
    0x4235EE, 0x4235EE, 0x4235EE, 0x4235EE, 0x4135EE, 0x4135EE, 0x4135EE, 0x4135EE, 0x4134EF, 0x4134EF, 0x4134EF, 0x4134EF, 0x4033EF, 0x4033EF, 0x4033EF, 0x4033EF,   // NOLINT(whitespace/line_length)
    0x3F33EF, 0x3F33EF, 0x3F33EF, 0x3F33EF, 0x3E32EF, 0x3E32EF, 0x3E32EF, 0x3E32EF, 0x3D31EF, 0x3D31EF, 0x3D31EF, 0x3D31EF, 0x3C31F0, 0x3C31F0, 0x3C31F0, 0x3C31F0,   // NOLINT(whitespace/line_length)
    0x3B30F0, 0x3B30F0, 0x3B30F0, 0x3B30F0, 0x3B2FF0, 0x3B2FF0, 0x3B2FF0, 0x3B2FF0, 0x3A2EF0, 0x3A2EF0, 0x3A2EF0, 0x3A2EF0, 0x392EF1, 0x392EF1, 0x392EF1, 0x392EF1,   // NOLINT(whitespace/line_length)
    0x382DF1, 0x382DF1, 0x382DF1, 0x382DF1, 0x372CF1, 0x372CF1, 0x372CF1, 0x372CF1, 0x362CF1, 0x362CF1, 0x362CF1, 0x362CF1, 0x352BF1, 0x352BF1, 0x352BF1, 0x352BF1,   // NOLINT(whitespace/line_length)
    0x352AF2, 0x352AF2, 0x352AF2, 0x352AF2, 0x342AF2, 0x342AF2, 0x342AF2, 0x342AF2, 0x3329F2, 0x3329F2, 0x3329F2, 0x3329F2, 0x3228F2, 0x3228F2, 0x3228F2, 0x3228F2,   // NOLINT(whitespace/line_length)
    0x3127F3, 0x3127F3, 0x3127F3, 0x3127F3, 0x3027F3, 0x3027F3, 0x3027F3, 0x3027F3, 0x2F26F3, 0x2F26F3, 0x2F26F3, 0x2F26F3, 0x2F25F3, 0x2F25F3, 0x2F25F3, 0x2F25F3,   // NOLINT(whitespace/line_length)
    0x2E25F3, 0x2E25F3, 0x2E25F3, 0x2E25F3, 0x2D24F4, 0x2D24F4, 0x2D24F4, 0x2D24F4, 0x2C23F4, 0x2C23F4, 0x2C23F4, 0x2C23F4, 0x2B23F4, 0x2B23F4, 0x2B23F4, 0x2B23F4,   // NOLINT(whitespace/line_length)
    0x2A22F4, 0x2A22F4, 0x2A22F4, 0x2A22F4, 0x2921F5, 0x2921F5, 0x2921F5, 0x2921F5, 0x2921F5, 0x2921F5, 0x2921F5, 0x2921F5, 0x2820F5, 0x2820F5, 0x2820F5, 0x2820F5,   // NOLINT(whitespace/line_length)
    0x271FF5, 0x271FF5, 0x271FF5, 0x271FF5, 0x261EF5, 0x261EF5, 0x261EF5, 0x261EF5, 0x251EF6, 0x251EF6, 0x251EF6, 0x251EF6, 0x241DF6, 0x241DF6, 0x241DF6, 0x241DF6,   // NOLINT(whitespace/line_length)
    0x231CF6, 0x231CF6, 0x231CF6, 0x231CF6, 0x221CF6, 0x221CF6, 0x221CF6, 0x221CF6, 0x221BF6, 0x221BF6, 0x221BF6, 0x221BF6, 0x211AF7, 0x211AF7, 0x211AF7, 0x211AF7,   // NOLINT(whitespace/line_length)
    0x201AF7, 0x201AF7, 0x201AF7, 0x201AF7, 0x1F19F7, 0x1F19F7, 0x1F19F7, 0x1F19F7, 0x1E18F7, 0x1E18F7, 0x1E18F7, 0x1E18F7, 0x1D18F8, 0x1D18F8, 0x1D18F8, 0x1D18F8,   // NOLINT(whitespace/line_length)
    0x1C17F8, 0x1C17F8, 0x1C17F8, 0x1C17F8, 0x1C16F8, 0x1C16F8, 0x1C16F8, 0x1C16F8, 0x1B15F8, 0x1B15F8, 0x1B15F8, 0x1B15F8, 0x1A15F8, 0x1A15F8, 0x1A15F8, 0x1A15F8,   // NOLINT(whitespace/line_length)
    0x1914F9, 0x1914F9, 0x1914F9, 0x1914F9, 0x1813F9, 0x1813F9, 0x1813F9, 0x1813F9, 0x1713F9, 0x1713F9, 0x1713F9, 0x1713F9, 0x1612F9, 0x1612F9, 0x1612F9, 0x1612F9,   // NOLINT(whitespace/line_length)
    0x1611FA, 0x1611FA, 0x1611FA, 0x1611FA, 0x1511FA, 0x1511FA, 0x1511FA, 0x1511FA, 0x1410FA, 0x1410FA, 0x1410FA, 0x1410FA, 0x130FFA, 0x130FFA, 0x130FFA, 0x130FFA,   // NOLINT(whitespace/line_length)
    0x120FFA, 0x120FFA, 0x120FFA, 0x120FFA, 0x110EFB, 0x110EFB, 0x110EFB, 0x110EFB, 0x100DFB, 0x100DFB, 0x100DFB, 0x100DFB, 0x100CFB, 0x100CFB, 0x100CFB, 0x100CFB,   // NOLINT(whitespace/line_length)
    0x0F0CFB, 0x0F0CFB, 0x0F0CFB, 0x0F0CFB, 0x0E0BFC, 0x0E0BFC, 0x0E0BFC, 0x0E0BFC, 0x0D0AFC, 0x0D0AFC, 0x0D0AFC, 0x0D0AFC, 0x0C0AFC, 0x0C0AFC, 0x0C0AFC, 0x0C0AFC,   // NOLINT(whitespace/line_length)
    0x0B09FC, 0x0B09FC, 0x0B09FC, 0x0B09FC, 0x0A08FC, 0x0A08FC, 0x0A08FC, 0x0A08FC, 0x0908FD, 0x0908FD, 0x0908FD, 0x0908FD, 0x0907FD, 0x0907FD, 0x0907FD, 0x0907FD,   // NOLINT(whitespace/line_length)
    0x0806FD, 0x0806FD, 0x0806FD, 0x0806FD, 0x0706FD, 0x0706FD, 0x0706FD, 0x0706FD, 0x0605FD, 0x0605FD, 0x0605FD, 0x0605FD, 0x0504FE, 0x0504FE, 0x0504FE, 0x0504FE,   // NOLINT(whitespace/line_length)
    0x0403FE, 0x0403FE, 0x0403FE, 0x0403FE, 0x0303FE, 0x0303FE, 0x0303FE, 0x0303FE, 0x0302FE, 0x0302FE, 0x0302FE, 0x0302FE, 0x0201FF, 0x0201FF, 0x0201FF, 0x0201FF,   // NOLINT(whitespace/line_length)
    0x0101FF, 0x0101FF, 0x0101FF, 0x0101FF, 0x0000FF, 0x0000FF, 0x0000FF, 0x0000FF, 0x0000FF, 0x0000FF, 0x0000FF, 0x0000FF, 0x0000FF, 0x0000FF, 0x0000FF, 0x0000FF,   // NOLINT(whitespace/line_length)
    0x0000FF, 0x0000FF, 0x0000FF, 0x0000FF, 0x0000FF, 0x0000FF, 0x0000FF, 0x0000FF, 0x0000FF, 0x0000FF, 0x0000FF, 0x0000FF, 0x0000FF, 0x0000FF, 0x0000FF, 0x0000FF,   // NOLINT(whitespace/line_length)
    0x0000FF, 0x0000FF, 0x0000FF, 0x0000FF, 0x0000FF, 0x0000FF, 0x0000FF, 0x0000FF, 0x0000FF, 0x0000FF, 0x0000FF, 0x0000FF, 0x0000FF, 0x0000FF, 0x0000FF, 0x0000FF,   // NOLINT(whitespace/line_length)
    0x0000FF, 0x0000FF, 0x0000FF, 0x0000FF, 0x0000FF, 0x0000FF, 0x0000FF, 0x0000FF, 0x0000FF, 0x0000FF, 0x0000FF, 0x0000FF, 0x0000FF, 0x0000FF, 0x0000FF, 0x0000FF,   // NOLINT(whitespace/line_length)
    0x0000FF, 0x0000FF, 0x0000FF, 0x0000FF, 0x0000FF, 0x0000FF, 0x0000FF, 0x0000FF, 0x0000FF, 0x0000FF, 0x0000FF, 0x0000FF, 0x0000FF, 0x0000FF, 0x0000FF, 0x0000FF,   // NOLINT(whitespace/line_length)
    0x0000FF, 0x0000FF, 0x0000FF, 0x0000FF, 0x0000FF, 0x0000FF, 0x0000FF, 0x0000FF, 0x0000FF, 0x0000FF, 0x0000FF, 0x0000FF, 0x0000FF, 0x0000FF, 0x0000FF, 0x0000FF,   // NOLINT(whitespace/line_length)
    0x0000FF, 0x0000FF, 0x0000FF, 0x0000FF, 0x0000FF, 0x0000FF, 0x0000FF, 0x0000FF, 0x0000FF, 0x0000FF, 0x0000FF, 0x0000FF, 0x0000FF, 0x0000FF, 0x0000FF, 0x0000FF,   // NOLINT(whitespace/line_length)
    0x0000FF, 0x0104FE, 0x0208FD, 0x030CFC, 0x0710F9, 0x0814F8, 0x0918F7, 0x0A1CF6, 0x0E20F4, 0x0F24F3, 0x1028F2, 0x112CF1, 0x1530EE, 0x1634ED, 0x1738EC, 0x183CEB,   // NOLINT(whitespace/line_length)
    0x1C40E8, 0x1D44E7, 0x1E48E6, 0x1F4CE5, 0x2350E3, 0x2454E2, 0x2558E1, 0x265CE0, 0x2A60DD, 0x2B64DC, 0x2C68DB, 0x2D6CDA, 0x3070D8, 0x3174D7, 0x3278D6, 0x337CD5,   // NOLINT(whitespace/line_length)
    0x3780D2, 0x3883D1, 0x3986D0, 0x3A89CF, 0x3E8FCE, 0x3F93CD, 0x4097CC, 0x419BCB, 0x459FC9, 0x46A3C8, 0x47A7C7, 0x48ABC6, 0x4CAFC5, 0x4DB3C4, 0x4EB7C3, 0x4FBBC2,   // NOLINT(whitespace/line_length)
    0x53BFC0, 0x54C3BF, 0x55C7BE, 0x56CBBD, 0x5ACFBC, 0x5BD3BB, 0x5CD7BA, 0x5DDBB9, 0x5EDFB7, 0x5FE3B6, 0x60E7B5, 0x61EBB4, 0x62EFB3, 0x63F3B2, 0x64F7B1, 0x65FBB0,   // NOLINT(whitespace/line_length)
    0x66FFAE, 0x67FEAD, 0x68FDAC, 0x69FCAB, 0x6AF8AA, 0x6BF7A9, 0x6CF6A8, 0x6DF5A7, 0x6EF2A5, 0x6FF1A4, 0x70F0A3, 0x71EFA2, 0x72EBA1, 0x72EAA0, 0x72E99F, 0x72E89E,   // NOLINT(whitespace/line_length)
    0x75E59C, 0x76E49B, 0x77E39A, 0x78E299, 0x79DE98, 0x7ADD97, 0x7BDC96, 0x7CDB95, 0x7DD893, 0x7ED792, 0x7FD691, 0x80D590, 0x81D18F, 0x82D08E, 0x83CF8D, 0x84CE8C,   // NOLINT(whitespace/line_length)
    0x85CB8B, 0x86CA8A, 0x87C989, 0x88C888, 0x89C486, 0x8AC385, 0x8BC284, 0x8CC183, 0x8DBE82, 0x8EBD81, 0x8FBC80, 0x90BB7F, 0x91B77D, 0x92B67C, 0x93B57B, 0x94B47A,   // NOLINT(whitespace/line_length)
    0x95B179, 0x96B078, 0x97AF77, 0x98AE76, 0x99AA74, 0x9AA973, 0x9BA872, 0x9CA771, 0x9DA370, 0x9EA26F, 0x9FA16E, 0xA0A06D, 0xA19D6B, 0xA29C6A, 0xA39B69, 0xA49A68,   // NOLINT(whitespace/line_length)
    0xA59667, 0xA69566, 0xA79465, 0xA89364, 0xA99062, 0xA98F61, 0xA98E60, 0xA98D5F, 0xAC895E, 0xAD885D, 0xAE875C, 0xAF865B, 0xB08359, 0xB18258, 0xB28157, 0xB38056,   // NOLINT(whitespace/line_length)
    0xB47C55, 0xB57B54, 0xB67A53, 0xB77952, 0xB87650, 0xB9754F, 0xBA744E, 0xBB734D, 0xBC6F4C, 0xBD6E4B, 0xBE6D4A, 0xBF6C49, 0xC06947, 0xC16846, 0xC26745, 0xC36644,   // NOLINT(whitespace/line_length)
    0xC46243, 0xC56142, 0xC66041, 0xC75F40, 0xC85C3F, 0xC95B3E, 0xCA5A3D, 0xCB593C, 0xCC553A, 0xCD5439, 0xCE5338, 0xCF5237, 0xD04E36, 0xD14D35, 0xD24C34, 0xD34B33,   // NOLINT(whitespace/line_length)
    0xD44831, 0xD54730, 0xD6462F, 0xD7452E, 0xD8412D, 0xD9402C, 0xDA3F2B, 0xDB3E2A, 0xDC3B28, 0xDD3A27, 0xDE3926, 0xDF3825, 0xE03424, 0xE03323, 0xE03222, 0xE03121,   // NOLINT(whitespace/line_length)
    0xE32E1F, 0xE42D1E, 0xE52C1D, 0xE62B1C, 0xE7271B, 0xE8261A, 0xE92519, 0xEA2418, 0xEB2116, 0xEC2015, 0xED1F14, 0xEE1E13, 0xEF1A12, 0xF01911, 0xF11810, 0xF2170F,   // NOLINT(whitespace/line_length)
    0xF3140D, 0xF4130C, 0xF5120B, 0xF6110A, 0xF70D09, 0xF80C08, 0xF90B07, 0xFA0A06, 0xFB0704, 0xFC0603, 0xFD0502, 0xFE0401, 0xFF0000, 0xFF0000, 0xFF0000, 0xFF0000   // NOLINT(whitespace/line_length)
};
